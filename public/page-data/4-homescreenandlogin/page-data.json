{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/4-homescreenandlogin",
    "result": {"data":{"site":{"siteMetadata":{"title":"GDG Chat App Codelab | Sumith Damodaran","docsLocation":"https://github.com/sumithpdd/gdg_chat_codelab"}},"mdx":{"fields":{"id":"fcbe5c72-a479-554f-addf-9815d5cc82e8","title":"Home Screen and Login","slug":"/4-homescreenandlogin"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"contentKey\": \"chapter\",\n  \"title\": \"Home Screen and Login\",\n  \"stepNo\": 4,\n  \"metaTitle\": \"Home Screen and Login page\",\n  \"metaDescription\": \"Home Screen and Login description\",\n  \"date\": \"2021-01-13T22:58:35.993Z\",\n  \"duration\": \"30 min\",\n  \"tags\": [\"flutter\", \"firebase\"],\n  \"keywords\": [\"flutter\", \"firebase\", \"studying\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"\\uD83C\\uDFE0 Home Screen and Login\"), mdx(\"h2\", null, \"\\uD83D\\uDD12 Authentication and Login\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/sumithpdd/flutterworkshop/tree/03_setup_firebase\"\n  }, \"https://github.com/sumithpdd/flutterworkshop/tree/03_setup_firebase\")), mdx(\"p\", null, \"Lets first add login screen for that we need to call \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"auth service\"), \", \"), mdx(\"p\", null, \"We create or use \\xA0\\uD83D\\uDCC1 Folder = > \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"services\"), \" -> File -> auth_service.dart \"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://res.cloudinary.com/sitecore/image/upload/c_limit,q_80,w_2000/v1643207682/Codelab/flutter_03_01_auth_service.dart_mdo96k.png\",\n    \"alt\": null\n  })), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"we are adding FirebaseMessaging for token reference, not an important step\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-dart\"\n  }, \"import 'package:firebase_auth/firebase_auth.dart';\\nimport 'package:firebase_messaging/firebase_messaging.dart';\\nimport 'package:flutter/services.dart';\\n\\nclass AuthService {\\n  final FirebaseAuth _auth = FirebaseAuth.instance;\\n  final FirebaseMessaging _messaging = FirebaseMessaging.instance;\\n\\n  Stream<User?> get user => _auth.authStateChanges();\\n\\n  Future<void> signup(String name, String email, String password) async {\\n    try {\\n      var authResult = await _auth.createUserWithEmailAndPassword(\\n        email: email,\\n        password: password,\\n      );\\n      if (authResult.user != null) {}\\n    } on PlatformException {\\n      rethrow;\\n    }\\n  }\\n\\n  Future<void> login(String email, String password) async {\\n    try {\\n      await _auth.signInWithEmailAndPassword(email: email, password: password);\\n    } on PlatformException {\\n      rethrow;\\n    }\\n  }\\n\\n  Future<void> logout() async {\\n    Future.wait([\\n      _auth.signOut(),\\n    ]);\\n  }\\n}\\n\")), mdx(\"p\", null, \"This user should also be stored in a database, so that we can use it in chat.\"), mdx(\"p\", null, \"Create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"constants.dart\"), \"\\uD83D\\uDCC4 file under \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"helpers\"), \" \\uD83D\\uDCC1 folder\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-dart\"\n  }, \"import 'package:cloud_firestore/cloud_firestore.dart';\\nimport 'package:firebase_storage/firebase_storage.dart';\\n\\nfinal FirebaseFirestore _db = FirebaseFirestore.instance;\\nfinal usersRef = _db.collection('users');\\n\\nfinal chatsRef = _db.collection('chats');\\n\\nfinal FirebaseStorage _storage = FirebaseStorage.instance;\\nfinal storageRef = _storage.ref();\\n\")), mdx(\"p\", null, \"go back and update \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"auth_service.dart\"), \" \\uD83D\\uDCC4 file and import \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"import 'package:/helpers/constants.dart';\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-dart\"\n  }, \" if (authResult.user != null) {\\n+        String? token = await _messaging.getToken();\\n+        usersRef.doc(authResult.user!.uid).set({\\n+          'name': name,\\n+          'email': email,\\n+          'profileImageUrl': '',\\n+          'bio': '',\\n+          'token': token,\\n+       });\\n      }\\n\")), mdx(\"p\", null, \"Full code.=> \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/sumithpdd/gdg_flutter_firebase_chat/blob/Authentication/lib/services/auth_service.dart\"\n  }, \"https://github.com/sumithpdd/gdg_flutter_firebase_chat/blob/Authentication/lib/services/auth_service.dart\")), mdx(\"p\", null, \"Create a new \\uD83D\\uDCC4 file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"app_user.dart\"), \"  under \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"models\"), \" \\uD83D\\uDCC1 folder to match these fields and map data from the database.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-dartÂ \"\n  }, \"import 'package:cloud_firestore/cloud_firestore.dart';\\n\\nclass AppUser {\\n  final String? id;\\n  final String? name;\\n  final String? profileImageUrl, email, bio, token;\\n  // {} named parameters\\n  AppUser(\\n      {this.id,\\n      this.name,\\n      this.profileImageUrl,\\n      this.email,\\n      this.bio,\\n      this.token});\\n\\n  factory AppUser.fromDoc(DocumentSnapshot doc) {\\n    return AppUser(\\n        id: doc.id,\\n        name: doc['name'],\\n        profileImageUrl: doc['profileImageUrl'],\\n        email: doc['email'],\\n        bio: doc['bio'],\\n        token: doc['token']);\\n  }\\n}\\n\")), mdx(\"span\", {\n    style: {\n      \"color\": \"#59afe1\"\n    }\n  }, \" FYI : understand this piece of code\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-dart\"\n  }, \"....\\n// {} named parameters\\n\\xA0\\xA0User({this.id, this.name, this.email, this.token});\\n....\\nfactory User.fromDoc(DocumentSnapshot doc)\\n\")), mdx(\"h2\", null, \"Check firebase Console\"), mdx(\"p\", null, \"Make sure \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"database\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"authentication\"), \" is set\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://res.cloudinary.com/sitecore/image/upload/c_limit,q_80,w_2000/v1643211130/Codelab/flutter_03_03_firebase_database_fgj16j.png\",\n    \"alt\": null\n  })), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://res.cloudinary.com/sitecore/image/upload/c_limit,q_80,w_2000/v1643210985/Codelab/flutter_03_02_firebase_authenitication_enable_ba7t0i.png\",\n    \"alt\": null\n  })), mdx(\"h2\", null, \"Step 2 - Login and Signup Screen\"), mdx(\"p\", null, \"To check if authentication is working , We create a new screen for Login and Signup\"), mdx(\"p\", null, \"\\uD83D\\uDCC1 Folder => \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"screens\"), \" - > \\uD83D\\uDCC4 file=> \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"login_screen.dart\")), mdx(\"p\", null, \"Code from login screen->\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"import 'package:flutter/material.dart';\\nimport 'package:flutter/services.dart';\\n\\nimport 'package:devfest_flutter_firebase_chat/helpers/app_constants.dart';\\nimport 'package:devfest_flutter_firebase_chat/services/auth_service.dart';\\n\\nclass LoginScreen extends StatefulWidget {\\n  static const String id = 'login_screen';\\n\\n  const LoginScreen({Key? key}) : super(key: key);\\n\\n  @override\\n  _LoginScreenState createState() => _LoginScreenState();\\n}\\n\\nclass _LoginScreenState extends State<LoginScreen> {\\n  final _loginFormKey = GlobalKey<FormState>();\\n  final _signupFormKey = GlobalKey<FormState>();\\n  late String _name, _email, _password;\\n  int _selectedIndex = 0;\\n\\n  _buildLoginForm() {\\n    return Form(\\n      key: _loginFormKey,\\n      child: Column(children: <Widget>[\\n        _buildEmailTF(),\\n        _buildPasswordTF(),\\n      ]),\\n    );\\n  }\\n\\n  _buildSignupForm() {\\n    return Form(\\n      key: _signupFormKey,\\n      child: Column(children: <Widget>[\\n        _buildNameTF(),\\n        _buildEmailTF(),\\n        _buildPasswordTF(),\\n      ]),\\n    );\\n  }\\n\\n  _buildNameTF() {\\n    return Padding(\\n      padding: const EdgeInsets.symmetric(horizontal: 30.0, vertical: 10.0),\\n      child: TextFormField(\\n        decoration: const InputDecoration(\\n            labelText: 'Name', icon: Icon(Icons.person_sharp)),\\n        validator: (input) =>\\n            input!.trim().isEmpty ? 'Please enter a vaild name' : null,\\n        onSaved: (input) => _name = input!.trim(),\\n      ),\\n    );\\n  }\\n\\n  _buildEmailTF() {\\n    return Padding(\\n      padding: const EdgeInsets.symmetric(horizontal: 30.0, vertical: 10.0),\\n      child: TextFormField(\\n        decoration: const InputDecoration(\\n            labelText: 'Email', icon: Icon(Icons.email_sharp)),\\n        validator: (input) =>\\n            !input!.contains('@') ? 'Please enter a vaild email' : null,\\n        onSaved: (input) => _email = input!,\\n      ),\\n    );\\n  }\\n\\n  _buildPasswordTF() {\\n    return Padding(\\n      padding: const EdgeInsets.symmetric(horizontal: 30.0, vertical: 10.0),\\n      child: TextFormField(\\n        decoration: const InputDecoration(\\n            labelText: 'Password', icon: Icon(Icons.lock_open_sharp)),\\n        validator: (input) =>\\n            input!.length < 6 ? 'Password must be atleast 6 characters' : null,\\n        onSaved: (input) => _password = input!,\\n        obscureText: true,\\n      ),\\n    );\\n  }\\n\\n  _submit() async {\\n    try {\\n      if (_selectedIndex == 0 && _loginFormKey.currentState!.validate()) {\\n        _loginFormKey.currentState!.save();\\n        await authservice.login(_email, _password);\\n      } else if (_selectedIndex == 1 &&\\n          _signupFormKey.currentState!.validate()) {\\n        _signupFormKey.currentState!.save();\\n        await authservice.signup(_name, _email, _password);\\n      }\\n    } on PlatformException catch (error) {\\n      _showErrorDialog(error.message!);\\n    }\\n  }\\n\\n  // _changeLanguage() async {\\n  //   I18n.onLocaleChanged(const Locale(\\\"da\\\", \\\"DK\\\"));\\n  // }\\n\\n  _showErrorDialog(String errorMessage) {\\n    showDialog(\\n      context: context,\\n      builder: (_) {\\n        return AlertDialog(\\n          title: const Text('Error'),\\n          content: Text(errorMessage),\\n          actions: <Widget>[\\n            TextButton(\\n                onPressed: () => Navigator.pop(context),\\n                child: const Text('OK'))\\n          ],\\n        );\\n      },\\n    );\\n  }\\n\\n  final AuthService authservice = AuthService();\\n  @override\\n  Widget build(BuildContext context) {\\n    return Scaffold(\\n      resizeToAvoidBottomInset: false,\\n      body: Column(\\n        children: [\\n          Padding(\\n            padding: const EdgeInsets.only(left: 8.0, top: 30.0),\\n            child: Card(\\n              semanticContainer: true,\\n              clipBehavior: Clip.antiAliasWithSaveLayer,\\n              child: Column(\\n                  crossAxisAlignment: CrossAxisAlignment.center,\\n                  children: [\\n                    Image.asset(\\n                      \\\"assets/images/devfest_uki.gif\\\",\\n                    ),\\n                    Padding(\\n                      padding: EdgeInsets.all(8.0),\\n                      child: Text(\\n                        \\\" { devfest - 2021 - chat app }\\\",\\n                        style: TextStyle(\\n                          backgroundColor: AppConstants.hexToColor(\\n                              AppConstants.APP_PRIMARY_COLOR_BLACK),\\n                          color: AppConstants.hexToColor(\\n                              AppConstants.APP_PRIMARY_COLOR_LIGHT),\\n                          fontSize: 24,\\n                          fontWeight: FontWeight.w600,\\n                        ),\\n                      ),\\n                    ),\\n                  ]),\\n              shape: RoundedRectangleBorder(\\n                borderRadius: BorderRadius.circular(10.0),\\n              ),\\n              elevation: 5,\\n              margin: EdgeInsets.all(10),\\n            ),\\n          ),\\n          const SizedBox(height: 10.0),\\n          Center(\\n            child: Column(\\n              mainAxisAlignment: MainAxisAlignment.center,\\n              children: <Widget>[\\n                //18n.of(context).welcome,\\n\\n                Row(\\n                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,\\n                  children: <Widget>[\\n                    SizedBox(\\n                      width: 150.0,\\n                      child: FlatButton(\\n                        shape: RoundedRectangleBorder(\\n                          borderRadius: BorderRadius.circular(10.0),\\n                        ),\\n                        color: _selectedIndex == 0\\n                            ? AppConstants.hexToColor(\\n                                AppConstants.APP_PRIMARY_COLOR)\\n                            : AppConstants.hexToColor(\\n                                AppConstants.APP_BACKGROUND_COLOR_GRAY),\\n                        child: Text(\\n                          'Login',\\n                          style: TextStyle(\\n                              fontSize: 20.0,\\n                              color: _selectedIndex == 0\\n                                  ? AppConstants.hexToColor(\\n                                      AppConstants.APP_PRIMARY_FONT_COLOR_WHITE)\\n                                  : AppConstants.hexToColor(\\n                                      AppConstants.APP_PRIMARY_COLOR)),\\n                        ),\\n                        onPressed: () => setState(() => _selectedIndex = 0),\\n                      ),\\n                    ),\\n                    SizedBox(\\n                      width: 150.0,\\n                      child: FlatButton(\\n                        shape: RoundedRectangleBorder(\\n                          borderRadius: BorderRadius.circular(10.0),\\n                        ),\\n                        color: _selectedIndex == 1\\n                            ? AppConstants.hexToColor(\\n                                AppConstants.APP_PRIMARY_COLOR)\\n                            : AppConstants.hexToColor(\\n                                AppConstants.APP_BACKGROUND_COLOR_GRAY),\\n                        child: Text(\\n                          'Sign Up',\\n                          style: TextStyle(\\n                              fontSize: 20.0,\\n                              color: _selectedIndex == 1\\n                                  ? AppConstants.hexToColor(\\n                                      AppConstants.APP_PRIMARY_FONT_COLOR_WHITE)\\n                                  : AppConstants.hexToColor(\\n                                      AppConstants.APP_PRIMARY_COLOR)),\\n                        ),\\n                        onPressed: () => setState(() => _selectedIndex = 1),\\n                      ),\\n                    )\\n                  ],\\n                ),\\n                _selectedIndex == 0 ? _buildLoginForm() : _buildSignupForm(),\\n                const SizedBox(height: 20.0),\\n                SizedBox(\\n                    width: 180,\\n                    child: FlatButton(\\n                      shape: RoundedRectangleBorder(\\n                          borderRadius: BorderRadius.circular(10.0)),\\n                      color: AppConstants.hexToColor(\\n                          AppConstants.APP_PRIMARY_COLOR),\\n                      onPressed: _submit,\\n                      child: Text(\\n                        'Submit',\\n                        style: TextStyle(\\n                          color: AppConstants.hexToColor(\\n                              AppConstants.APP_PRIMARY_FONT_COLOR_WHITE),\\n                          fontSize: 20.0,\\n                        ),\\n                      ),\\n                    )),\\n              ],\\n            ),\\n          ),\\n        ],\\n      ),\\n    );\\n  }\\n}\\n\\n\")), mdx(\"h3\", null, \"Update Main.dart\"), mdx(\"p\", null, \"Initialize Firebase on start\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"void main() async {\\n+  WidgetsFlutterBinding.ensureInitialized();\\n+  await Firebase.initializeApp();\\n\")), mdx(\"span\", {\n    style: {\n      \"color\": \"#FF003B\"\n    }\n  }, \"Delete class `MyHomePage` and direct home to the new `LoginScreen`.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"home: const LoginScreen(),\\n\")), mdx(\"h1\", null, \"Working Login and Signup Screen\"), mdx(\"h4\", null, \"Signup Screen\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://res.cloudinary.com/sitecore/image/upload/c_limit,q_80,w_2000/v1643213055/Codelab/flutter_03_o5uono.png\",\n    \"alt\": \"Chat app signup screen\",\n    \"title\": \"Chat app signup screen\"\n  })), mdx(\"h4\", null, \"Login Screen\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://res.cloudinary.com/sitecore/image/upload/c_limit,q_80,w_2000/v1643212854/Codelab/flutter_02_oxubhh.png\",\n    \"alt\": \"Chat app login screen\",\n    \"title\": \"Chat app login screen\"\n  })), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://res.cloudinary.com/sitecore/image/upload/c_limit,q_80,w_2000/v1643213183/Codelab/flutter_03_04_firebase_database_usersaved_whaqmn.png\",\n    \"alt\": null\n  })), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://res.cloudinary.com/sitecore/image/upload/c_limit,q_80,w_2000/v1643212854/Codelab/flutter_02_oxubhh.png\",\n    \"alt\": \"chat app signup screen\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#-home-screen-and-login","title":"ð  Home Screen and Login","items":[{"url":"#-authentication-and-login","title":"ð Authentication and Login"},{"url":"#check-firebase-console","title":"Check firebase Console"},{"url":"#step-2---login-and-signup-screen","title":"Step 2 - Login and Signup Screen","items":[{"url":"#update-maindart","title":"Update Main.dart"}]}]},{"url":"#working-login-and-signup-screen","title":"Working Login and Signup Screen","items":[{"items":[{"items":[{"url":"#signup-screen","title":"Signup Screen"},{"url":"#login-screen","title":"Login Screen"}]}]}]}]},"parent":{"relativePath":"4-homescreenandlogin.mdx"},"frontmatter":{"metaTitle":"Home Screen and Login page","metaDescription":"Home Screen and Login description"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/","title":"Flutter Chat App Codelab"}}},{"node":{"fields":{"slug":"/1-introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/2-project-structure","title":"Project Structure"}}},{"node":{"fields":{"slug":"/3-step-up-firebase-for-chat-app","title":"Step up - Firebase for chat app"}}},{"node":{"fields":{"slug":"/4-homescreenandlogin","title":"Home Screen and Login"}}},{"node":{"fields":{"slug":"/5-chat-screen","title":"Chat Screen"}}},{"node":{"fields":{"slug":"/6-attendees-screen","title":"Attendees Screen"}}},{"node":{"fields":{"slug":"/7-firebase-storage-profile","title":"Firebase Storage - Profile"}}},{"node":{"fields":{"slug":"/8-update-chat-screen","title":"Update Chat Screen"}}},{"node":{"fields":{"slug":"/9-1-one-more-thing","title":"One more thing"}}},{"node":{"fields":{"slug":"/9-2-appendix","title":"Appendix"}}}]}},"pageContext":{"id":"fcbe5c72-a479-554f-addf-9815d5cc82e8"}},
    "staticQueryHashes": ["2375958266","3940619206","417421954"]}